@import "config";

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  background-color: $light-color;
  font-family: $font-stack;
  line-height: 1.6;
}

img {
  width: 100%;
}

a {
  text-decoration: none;
}

.showcase {
  // _config.scss 에서 정의한 @mixin을 이용하여 배경색과 그에 따른 텍스트 컬러를 자동으로 지정함.
  @include set-background($primary-color);
  height: 600px;

  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;

    ul {
      display: flex;
      list-style-type: none;
    }

    li {
      padding: 15px;
    }

    a {
      color: set-text-color(
        $primary-color
      ); // 얘도 마찬가지로 배경색에 따라 색상값을 리턴해주는 함수 사용!
    }

    a:hover {
      color: $secondary-color;
    }
  }

  &-content {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 30px;

    img {
      width: 50%;
    }

    h1 {
      font-size: 50px;
      line-height: 1.2;
    }
  }
}

// @import 작업을 해주는 위치가 달라지면 컴파일된 css 파일에서도 해당 import된 partial이 그 위치에 맞게 컴파일될거임.
@import "utilities";
@import "buttons";
@import "mobile"; // 그냥 css로 짤 때도 미디어쿼리는 맨 하단에 작성하니까 partial로 나눈 파일로 맨 밑에서 import 하도록 함.

/*
마지막으로 중요한 포인트!
  
sass를 사용해서 만든 웹 어플리케이션을 배포할 때,
scss 폴더안에 담긴 .scss 파일은 배포를 해선 안된다.

왜냐하면 어차피 웹 브라우저가 읽을 수 있는 파일은
css 폴더안에 컴파일된 css 파일 하나밖에 없기 때문에
scss 폴더를 서버에 업로드하고 배포해봐야 용량만 차지하고 좋을 게 없음.

어쨋든 scss는 개발자가 사용하는 파일이므로
배포할 때 제외시켜야 한다!
*/
